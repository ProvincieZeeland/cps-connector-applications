version: '3.7'

services:
     
  redis-master:
    container_name: redis-master
    image: redis:7.2.4-alpine3.19
    command: redis-server /usr/local/etc/redis/redis.conf
    env_file:
      - .env    
    labels:
      cps.stack: Redis 
      cps.name: "Redis Master"
      cps.env: "Global"      
    volumes:
      - ${REDIS_RDB_PATH}:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped      
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 5s
      timeout: 3s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-file: 5
        max-size: 15m
    networks:
      - redis
 
  redis-slave:
    container_name: redis-slave
    image: redis:7.2.4-alpine3.19
    command: redis-server --slaveof redis-master 6379
    env_file:
      - .env
    links:
      - redis-master
    volumes:
      - ${REDIS_RDB_PATH}:/data
    labels:
      cps.stack: Redis 
      cps.name: "Redis Slave 1"
      cps.env: "Global"      
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped       
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 5s
      timeout: 3s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-file: 5
        max-size: 15m
    networks:
      - redis    
     
  # Instance 1
  redis-sentinel:
    container_name: redis-sentinel-1
    build: 
      context: ./redis-sentinel
    links:
      - redis-master
    labels:
      cps.stack: Redis 
      cps.name: "Redis Sentinel node 1"
      cps.env: "Global"      
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped      
    healthcheck:
      test: "kill -0 $(pgrep redis-server)"
      interval: 5s
      timeout: 3s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-file: 5
        max-size: 15m
    networks:
      - redis    
 
  # Instance 2
  redis-sentinel2:
    container_name: redis-sentinel-2
    build: 
      context: ./redis-sentinel
    links:
      - redis-master
    labels:
      cps.stack: Redis 
      cps.name: "Redis Sentinel node 2"
      cps.env: "Global"      
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped      
    healthcheck:
      test: "kill -0 $(pgrep redis-server)"
      interval: 5s
      timeout: 3s
      retries: 3    
    logging:
      driver: "json-file"
      options:
        max-file: 5
        max-size: 15m
    networks:
      - redis    
 
  # Instance 3
  redis-sentinel3:
    container_name: redis-sentinel-3
    build: 
      context: ./redis-sentinel
    links:
      - redis-master
    labels:
      cps.stack: Redis 
      cps.name: "Redis Sentinel node 3"
      cps.env: "Global"      
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    healthcheck:
      test: "kill -0 $(pgrep redis-server)"
      interval: 5s
      timeout: 3s
      retries: 3    
    logging:
      driver: "json-file"
      options:
        max-file: 5
        max-size: 15m
    networks:
      - redis    

networks:
  redis:
     external: true
     
